@startuml
title Car renter wants to reserve cars at two car rental companies: A and B

participant Client
participant ReservationSession
participant CarRentalAgency
participant "crcA : CarRentalCompany" as CarRentalCompanyA
participant "crcB : CarRentalCompany" as CarRentalCompanyB
participant "rcA : ReservationConstraint" as RCA
participant "rcB : ReservationConstraint" as RCB

activate Client
activate ReservationSession
activate CarRentalAgency

== check availability of a car type at CRC A ==
' cartype at company A
Client->ReservationSession: checkForAvailableCarTypes
ReservationSession->CarRentalAgency : getAvailableCarTypes

CarRentalAgency->CarRentalCompanyA : getAvailableCarTypes
activate CarRentalCompanyA
CarRentalCompanyA-->ReservationSession : set of available cartypes
deactivate CarRentalCompanyA
CarRentalAgency->CarRentalCompanyB : getAvailableCarTypes
activate CarRentalCompanyB
CarRentalCompanyB-->ReservationSession : set of available cartypes
deactivate CarRentalCompanyB
ReservationSession-->Client : print all sets of available cartypes

== create quote for a car type at CRC A ==
' TODO eerst ReservationConstraint aanmaken
Client->RCA **: rcA = create a reservation constraint
Client->ReservationSession: addQuote(rcA) 

== check availability of a car type at CRC B ==
' cartype at company B
Client->ReservationSession: checkForAvailableCarTypes

ReservationSession->CarRentalAgency : getAvailableCarTypes 

CarRentalAgency->CarRentalCompanyA : getAvailableCarTypes
activate CarRentalCompanyA
CarRentalCompanyA-->ReservationSession : set of available cartypes
deactivate CarRentalCompanyA
CarRentalAgency->CarRentalCompanyB : getAvailableCarTypes
activate CarRentalCompanyB
CarRentalCompanyB-->ReservationSession : set of available cartypes
deactivate CarRentalCompanyB
ReservationSession-->Client : print all sets of available cartypes

== create quote for a car type at CRC B ==
Client->RCB **: rcB = create a reservation constraint
Client->ReservationSession: addQuote(rcB) 


@enduml
