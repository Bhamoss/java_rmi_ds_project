@startuml
title Design

package centralPoint{

class Session 
Session -->"1" CarRentalAgency

class ReservationSession {
    state : List<Quotes>
    __
    createQuote()
    getCurrentQuotes()
    confirmQuotes()
    getAvailableCarTypes()
    getCheapestCarType()
    __
    Remote
}
ReservationSession --|> Session
ReservationSession ..|> IReservationSession : stub
interface IReservationSession





class ManagerSession {
    registerCRC()
    unregisterCRC()
    getCRCs()
    getCRCCarTypes(crc)
    getNbReservations(type: CarType)
    getBestCustomer()
    getNbReservationsRenter(renter)
    getMostPopularCRC(date: Date)
    __
    Remote
}
ManagerSession --|> Session
ManagerSession ..|> IManagerSession : stub
interface IManagerSession

class CarRentalAgency {
    NameService : Map<String, ICarRentalCompany>
    __
    Remote
}

CarRentalAgency ..|> ICarRentalAgency : stub

interface ICarRentalAgency {
}

}

package specific_car_rental_COMPANY_server {

interface ICarRentalCompany 
CarRentalAgency -->"*" ICarRentalCompany

class Car {

}
Car -->"*" Reservation
Car -->"1" CarType

class Reservation {

}
Reservation --|> Quote

class Quote {
}


class CarType {
    df
}

'class ReservationException {
'}

class CarRentalCompany {
    __
    Remote
}
CarRentalCompany ..|> ICarRentalCompany : stub
CarRentalCompany -->"*" Car
CarRentalCompany -->"*" CarType



'class ReservationConstraints {
'}
}
package clientside{
class Client {
    cra : CarRentalAgency

    Client(cra : CarRentalAgency) : Client {Constructor, vraagt session}
    getNewReservationSession(String name) : ReservationSession
    getNewManagerSession(String name, String carRentalName) : ManagerSession
    checkForAvailableCarTypes(ReservationSession session, Date start, Date end)

}
Client -->"1" ICarRentalAgency
Client ..> IReservationSession : uses
Client ..> IManagerSession : uses
}


interface Remote
ICarRentalAgency --|> Remote
ICarRentalCompany --|> Remote
IManagerSession --|> Remote
IReservationSession --|> Remote


@enduml